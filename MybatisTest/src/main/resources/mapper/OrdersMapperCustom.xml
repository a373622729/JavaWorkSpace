<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace作用是对sql进行分类化管理,理解sql隔离
注意:使用mapper代理开发,namespace有重要作用
-->
<mapper namespace="com.mybatis.mapper.OrdersMapperCustom">

    <!--查询订单,关联查询用户,一对一映射,建议用这个方法-->
    <select id="findOrdersUser" resultType="com.mybatis.po.OrdersCustom">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address
        FROM orders, user
        WHERE orders.user_id = user.id
    </select>

    <resultMap id="OrdersUserResultMap" type="com.mybatis.po.Orders">
        <!--订单-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--关联的user
        用于映射关联查询单个对象的信息
        property:关联查询的用户信息映射到orders的哪个属性
        -->
        <association property="user" javaType="com.mybatis.po.User">
            <!--column:-->
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>
    </resultMap>

    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address
        FROM orders, user
        WHERE orders.user_id = user.id
    </select>


    <!--使用继承 extends-->
    <resultMap id="OrdersAndOrderDetailsResultMap" type="com.mybatis.po.Orders" extends="OrdersUserResultMap">
        <!--订单信息-->
        <!--用户信息-->
        <!--使用了继承-->

        <!--明细信息
        一个订单多个明细,使用collection
        ofType:要映射到集合属性中,pojo的类型
        -->
        <collection property="orderDetails" ofType="com.mybatis.po.OrderDetail">
            <id column="orderdetail_id" property="id"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
            <result column="orders_id" property="ordersId"/>
        </collection>
    </resultMap>

    <!--一对多映射, 查询订单和订单明细-->
    <select id="findOrdersAndOrderDetailsResultMap" resultMap="OrdersAndOrderDetailsResultMap">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id
        FROM orders, user, orderdetail
        WHERE orders.user_id = user.id AND orderdetail.orders_id = orders.id
    </select>

    <resultMap id="UserAndItemsResultMap" type="com.mybatis.po.User">
        <!--用户信息-->
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <!--订单信息-->
        <collection property="ordersList" ofType="com.mybatis.po.Orders" javaType="arraylist" resultMap="ordersResultMap"/>
    </resultMap>

    <!--订单的ResultMap-->
    <resultMap id="ordersResultMap" type="com.mybatis.po.Orders">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <collection property="orderDetails" ofType="com.mybatis.po.OrderDetail" javaType="arraylist" resultMap="orderDetailResultMap"/>
    </resultMap>

    <!--订单明细的resultMap-->
    <resultMap id="orderDetailResultMap" type="com.mybatis.po.OrderDetail">
        <id column="orderdetail_id" property="id"/>
        <result column="items_id" property="itemsId"/>
        <result column="items_num" property="itemsNum"/>
        <result column="orders_id" property="ordersId"/>
        <!--items商品信息-->

        <association property="item" javaType="com.mybatis.po.Item">
            <id column="items_id" property="id"/>
            <result column="items_detail" property="detail"/>
            <result column="items_name" property="name"/>
            <result column="items_price" property="price"/>
        </association>
    </resultMap>
    <!--多对多映射,查询用户购买的商品,所以在user中添加orderList,orderDetailList, 在orderDetail中添加Items-->
    <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id,
            items.name     items_name,
            items.detail   items_detail,
            items.price    items_price
        FROM orders, user, orderdetail, items
        WHERE orders.user_id = user.id AND orderdetail.orders_id = orders.id AND items.id = orderdetail.items_id
    </select>

    <resultMap id="OrdersUserLazyLoading" type="com.mybatis.po.Orders">
        <!--对订单信息的配置-->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--用户信息配置
        select:指定延迟加载需要执行的statement的id,根据user_id查询用户信息的statement
        column:订单信息中关联用户信息查询的列,是user_id
        -->
        <association property="user" javaType="com.mybatis.po.User" select="com.mybatis.mapper.UserMapper.findUserById" column="user_id"/>
    </resultMap>
    <!--查询订单,关联查询用户,用户信息延迟加载, resultMap才有延迟加载的功能-->
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoading">
        SELECT *
        FROM orders;
    </select>
</mapper>
