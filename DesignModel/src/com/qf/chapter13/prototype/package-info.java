/**
 * Created by ios on 16/10/27.
 *
 * 原型模式:
 *     用原型实例指定创建对象的种类,并且通过拷贝 这些原型创建新的对象.
 *
 * Cloneable接口是用来标识这个对象是可以拷贝的,它本身一个方法都没有
 *
 *
 * 使用场景:
 *      1.资源优化场景
 *          类初始化需要消耗非常多的资源,这个资源包括数据,硬件等
 *      2.性能和安全要求的场景
 *          通过new产生一个对象需要非常繁琐的数据准备或访问权限,那么这时可以使用原型模式
 *      3.一个对象多个修改者的场景
 *          一个对象提供给其他对象访问,而且各个调用者都需要修改它的值的时候
 *
 *      实际项目中,原型模式,很少单独出现,通常是和工厂方法模式一起出现,通过clone的方法创建一个对象,然后由工厂方法提供给调用者.
 *
 * 注意事项:
 *      1.构造函数不会被执行
 *          object的clone方法原理是从内存中（堆内存）以二进制流的方式进行拷贝,重新分配一个内存块
 *      2.浅拷贝和深拷贝
 *          不会被拷贝,数组和引用对象,
 *          要满足
 *              1.是类的成员变量,而不是方法的成员变量
 *              2.必须是一个可变的引用对象
 *
 *          浅拷贝:数值和基本数据类型是可以拷贝的,如果域中包含了对子对象的引用,那么子对象是不会被拷贝的,还是指向原来那块内存区域
 *          深拷贝:拿到拷贝的对象,然后进行对其私有的类变量进行独立的拷贝.
 *      3.clone不能clone final修饰的成员变量
 */
